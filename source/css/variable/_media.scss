//== media
// Media queries breakponits
//xs ponit
$screen-sm: 576px;
$screen-sm-min: $screen-sm - 1;
//sm ponit
$screen-tablet: 768px;
$screen-tablet-min: $screen-tablet - 1;
//md ponit
$screen-desktop: 992px;
$screen-desktop-min: $screen-desktop - 1;
//lg ponit
$screen-lg-desktop: 1200px;
$screen-lg-desktop-min: $screen-lg-desktop - 1;

$breakpoints: (
    'xs': (
        b: $screen-sm,
        s: $screen-sm-min
    ),
    'sm': (
        b: $screen-tablet,
        s: $screen-tablet-min
    ),
    'md': (
        b: $screen-desktop,
        s: $screen-desktop-min
    ),
    'lg': (
        b: $screen-lg-desktop,
        s: $screen-lg-desktop-min
    )
);

/// media
/// @author lencx
/// @access public
/// @param {xs|sm|md|lg} $param
/// @param {max|min} or {sm|md|lg} $param2
@mixin repond($param, $param2) {
    @if($param2 == 'max') {
        @media screen and (max-width: map-deep-get($breakpoints, $param, s)) { @content; }
    }
    @else if($param2 == 'min') {
        @media screen and (min-width: map-deep-get($breakpoints, $param, b)) { @content; }
    }
    @else {
        @media screen and (min-width: map-deep-get($breakpoints, $param, b)) and (max-width: map-deep-get($breakpoints, $param2, s)) { @content; }
    }
}

@mixin tablet {
    @include repond('sm', 'min') {
        @content;
    }
}

@mixin desktop {
    @include repond('md', 'min') {
        @content;
    }
}